name: Deken Upload 
on:
  workflow_dispatch:
    inputs:
      ObjectVersion:
        description: 'Add the version for upload'
        type: string
        required: true
      Windows:
        description: 'Build and Upload Windows?'
        type: boolean
        required: true
        default: true
      Linux:
        description: 'Build and Upload Linux?'
        type: boolean
        required: true
        default: true
      Mac:
        description: 'Build and Upload Mac?'
        type: boolean
        required: true
        default: true

jobs:  
  linux-build:
    runs-on: ubuntu-20.04
    if: ${{ github.event.inputs.Linux == 'true' }}
    timeout-minutes: 7
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Build Dependencies
        run: |
          sudo apt-get install puredata -y
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update

      - name: Build
        run: make 
      
      - name: Copy files to soundtouch_Linux
        run: |
          mkdir soundtouch_Linux
          cp soundtouch~.pd_linux soundtouch~-help.pd soundtouch_Linux
          ./resources/localdeps/localdeps.linux.sh soundtouch_Linux/soundtouch~.pd_linux
          zip -r soundtouch_Linux.zip soundtouch_Linux
                
      # - name: Configure Deken
      #   env:
      #     DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
      #     DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      #   run: |
      #     curl https://raw.githubusercontent.com/pure-data/deken/main/developer/deken > deken
      #     chmod 755 ./deken
      #     mkdir ~/.deken
      #     mkdir soundtouch~
      #     cp soundtouch~.pd_linux soundtouch~/soundtouch~.pd_linux
      #     cp soundtouch~-help.pd soundtouch~/soundtouch~-help.pd
      #     python3 -m venv ~/.deken/virtualenv/
      #     source ~/.deken/virtualenv/bin/activate
      #     python3 -m pip install hy==0.19
      #     ./deken upgrade --self
      #     ./deken package soundtouch~ -v ${{ github.event.inputs.ObjectVersion }} -n soundtouch~ 
      #     echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
      #     echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
      #     ./deken upload *.dek
      #   continue-on-error: true

      # - name: Upload Deken
      #   env:
      #     DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
      #     DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      #   run: |
      #     source ~/.deken/virtualenv/bin/activate
      #     echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
      #     echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
      #     ./deken upload *.dek


  windows-build:
    runs-on: windows-latest
    if: ${{ github.event.inputs.Windows == 'true' }}
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - if: runner.os == 'Windows'
      name: "Install mingw deps"
      uses: msys2/setup-msys2@v2
      with:
          install: make autoconf automake libtool mingw-w64-x86_64-gcc libtool mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-libsystre mingw-w64-x86_64-dlfcn unzip
          update: false

    - name: Configure Environment
      run: |
        mkdir soundtouch~_WIN64
        choco install puredata --yes
        python -m pip install numpy
        python -c "import sysconfig; f = open('pythonincludes.txt', 'w'); print(sysconfig.get_paths()['include'].replace('\\', '/'), file=f); f.close()"
        python -c "import os; import sys; f = open('pythonpath.txt', 'w'); print(os.path.dirname(sys.executable).replace('\\', '/'), file=f); f.close()"
        python -c "import os; import sys; import numpy.distutils.misc_util as np_utils; f = open('numpyincludes.txt', 'w'); print(np_utils.get_numpy_include_dirs()[0].replace('\\', '/'), file=f); f.close()"
    
    - if: runner.os == 'Windows'
      name: Build soundtouch~
      shell: msys2 {0}
      run: |
        make PYTHON_VERSION=python3.10
    
    - name: Create Object Folder
      run: |
        mv soundtouch~.dll soundtouch~.m_amd64
        $pythonpath = Get-Content pythonpath.txt
        Copy-Item -Path "$pythonpath\python310.dll" -Destination soundtouch~_WIN64\ -Recurse
        Copy-Item -Path "$pythonpath\python3.dll" -Destination soundtouch~_WIN64\ -Recurse
        mkdir soundtouch~_WIN64\\src\\
        mkdir soundtouch~_WIN64\\resources\\
        cp soundtouch~.m_amd64 soundtouch~_WIN64\
        cp resources\\soundtouch~.cfg soundtouch~_WIN64\
        cp resources\\py.py soundtouch~_WIN64\ 
        cp resources\\soundtouch~-help.pd soundtouch~_WIN64\         
        xcopy src\*.h soundtouch~_WIN64\src\
        xcopy src\*.c soundtouch~_WIN64\src\
        cp -r resources\* soundtouch~_WIN64\resources\
      
    - if: runner.os == 'Windows'
      name: Build soundtouch~
      env:
        DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
        DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      shell: msys2 {0}
      run: |
        mv soundtouch~_WIN64 soundtouch~
        mkdir ~/.deken
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        wget https://github.com/pure-data/deken/releases/download/v0.9.2/deken_Windows64.zip
        unzip deken_Windows64.zip
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        ./deken package soundtouch~ -v ${{ github.event.inputs.ObjectVersion }} -n soundtouch~
        ./deken upload *.dek

    
  macos-intel-build:
    runs-on: macos-latest
    if: ${{ github.event.inputs.MacOS == 'true' }}
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: set Enviroment
      run: |
        brew install --cask pd
        python3.10 -c 'import sysconfig;print(sysconfig.get_config_var("LINKFORSHARED"))'
        python3.10 -m pip install numpy
        mkdir soundtouch~_macOS-Intel

    - name: Build
      run: make PYTHON_VERSION=python3.10 

    - name: Copy files to soundtouch~_macOS-Intel
      run: |
        cp soundtouch~.pd_darwin resources/soundtouch~.cfg resources/py.py resources/soundtouch~-help.pd soundtouch~_macOS-Intel
        mkdir soundtouch~_macOS-Intel/resources
        mkdir soundtouch~_macOS-Intel/src
        cp -r resources/* soundtouch~_macOS-Intel/resources
        cp -r src/* soundtouch~_macOS-Intel/src
        zip -r soundtouch~_macOS-Intel.zip soundtouch~_macOS-Intel

    - name: Upload Deken
      env:
        DEKEN_PASSWORD: ${{ secrets.DEKEN_PASSWORD }}
        DEKEN_USERNAME: ${{ secrets.DEKEN_USERNAME }}
      run: |
        wget https://github.com/pure-data/deken/releases/download/v0.9.2/deken_macOS.zip -O deken_macOS.zip
        unzip deken_macOS.zip
        mkdir ~/.deken
        echo username=${{ secrets.DEKEN_USERNAME }} > ~/.deken/config
        echo password=${{ secrets.DEKEN_PASSWORD }} >> ~/.deken/config
        mv soundtouch~_macOS-Intel soundtouch~
        ./deken package soundtouch~ -v ${{ github.event.inputs.ObjectVersion }} -n soundtouch~
        ./deken upload *.dek
